chatflow        : flow+

flow            : "flow" flow_name "{" block "}"

block           : statement*

statement       : if_statement
                | speak_statement
                | goto_statement
                | handover_statement
                | end_statement
                | listen_statement
                | assign_statement

if_statement    : "if" condition "{" block "}" elif_statement* else_statement?
elif_statement  : "elif" condition "{" block "}"
else_statement  : "else" "{" block "}"

speak_statement : "speak" value

goto_statement  : "goto" flow_name

handover_statement : "handover" script_name

end_statement   : "end"

listen_statement: "listen" "for" variable ("for" time "before" flow_name)?

assign_statement: "assign" identifier "to" expression

condition       : expression "match" value ("as" variable)?
                | expression "equals" expression


expression      : term (add_sub_operator term)*

term            : factor (mul_div_operator factor)*

factor          : literal
                | identifier
                | "(" expression ")"

add_sub_operator: "+" | "-"

mul_div_operator: "*" | "/"

value           : literal
                | identifier

variable        : identifier

identifier      : IDENTIFIER_TOKEN

flow_name       : identifier

script_name     : identifier

time            : INTEGER_LITERAL time_unit

time_unit       : "s" | "m" | "h"

comparison_operator: "equals" | "larger" "than" | "less" "than"

literal         : STRING_LITERAL
                | NUMBER_LITERAL

IDENTIFIER_TOKEN: /[a-zA-Z_][a-zA-Z0-9_]*/
STRING_LITERAL  : /\"(\\.|[^"\n])*\"/
NUMBER_LITERAL  : SIGNED_NUMBER
INTEGER_LITERAL : INT

%import common.SIGNED_NUMBER
%import common.INT
%ignore /[\t\f\r ]/
%import common.NEWLINE -> NL
%ignore NL
%ignore /\/\/.*/